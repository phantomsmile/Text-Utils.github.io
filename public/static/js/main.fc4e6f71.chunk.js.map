{"version":3,"sources":["Components/About.js","Components/ColorPicker.js","Components/Navbar.js","Components/TestForm.js","Components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["About","props","react_default","a","createElement","className","style","backgroundColor","mode","color","paddingBottom","borderRadius","id","ColorPicker","_useState","useState","_useState2","Object","slicedToArray","setColor","height","type","data-bs-toggle","data-bs-target","aria-expanded","aria-controls","width","es","onChange","updatedColor","hex","Navbar","concat","react_router_dom","to","title","aria-label","aria-current","aboutText","switchTheme","onClick","toggleMode","modeText","htmlFor","role","placeholder","TestForm","text","setText","_useState3","_useState4","words","setWords","Fragment","heading","value","event","target","numberOfWords","split","length","rows","newText","toUpperCase","background","toLocaleLowerCase","promp1","prompt","promp2","replace","newWord","RegExp","reverseWordArr","map","word","reverse","join","navigator","clipboard","writeText","showAlert","trim","prototype","PropTypes","string","isRequired","defaultProps","Alert","alert","lower","toLowerCase","charAt","slice","capatalize","msg","App","setMode","setModeText","_useState5","_useState6","setAlert","message","setTimeout","document","body","theme","Components_Alert","react_router","exact","path","element","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.fc4e6f71.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport default function About(props) {\r\n  return (\r\n    <div className=\"container \" style= {{backgroundColor: props.mode=== 'dark'?'grey':'white', color: props.mode=== 'dark'?'white':'black', paddingBottom: '12px', borderRadius: '10px'}}>\r\n      <h1 className=\"my-3\">About Us</h1>\r\n      <div className=\"accordion\" id=\"accordionExample\">\r\n        <div className=\"accordion-item\">\r\n          <h2 className=\"accordion-header\" id=\"headingOne\">\r\n          </h2>\r\n          <div>\r\n            <div className=\"accordion-body\">\r\n              <h3>This is the first item's accordion body.</h3> It is\r\n              shown by default, until the collapse plugin adds the appropriate\r\n              classes that we use to style each element. These classes control\r\n              the overall appearance, as well as the showing and hiding via CSS\r\n              transitions. You can modify any of this with custom CSS or\r\n              overriding our default variables. It's also worth noting that just\r\n              about any HTML can go within the <code>.accordion-body</code>,\r\n              though the transition does limit overflow.\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"accordion-item\">\r\n          <div>\r\n            <div className=\"accordion-body\">\r\n              <strong>This is the second item's accordion body.</strong> It is\r\n              hidden by default, until the collapse plugin adds the appropriate\r\n              classes that we use to style each element. These classes control\r\n              the overall appearance, as well as the showing and hiding via CSS\r\n              transitions. You can modify any of this with custom CSS or\r\n              overriding our default variables. It's also worth noting that just\r\n              about any HTML can go within the <code>.accordion-body</code>,\r\n              though the transition does limit overflow.\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"accordion-item\">\r\n          <div>\r\n            <div className=\"accordion-body\">\r\n              <strong>This is the third item's accordion body.</strong> It is\r\n              hidden by default, until the collapse plugin adds the appropriate\r\n              classes that we use to style each element. These classes control\r\n              the overall appearance, as well as the showing and hiding via CSS\r\n              transitions. You can modify any of this with custom CSS or\r\n              overriding our default variables. It's also worth noting that just\r\n              about any HTML can go within the <code>.accordion-body</code>,\r\n              though the transition does limit overflow.\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}","import React, { useState }from \"react\";\r\nimport { ChromePicker } from \"react-color\";\r\n\r\n\r\nexport default function ColorPicker(props) {\r\n  const [color, setColor] = useState(\"#fff\");\r\n\r\n  return (\r\n    <div style={{height: '40px'}}>\r\n      <p>\r\n        <button\r\n          className=\"btn btn-primary\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#collapseWidthExample\"\r\n          aria-expanded=\"false\"\r\n          aria-controls=\"collapseWidthExample\"\r\n        >\r\n          Select Theme\r\n        </button>\r\n      </p>\r\n      <div>\r\n        <div className=\"collapse collapse-horizontal\" id=\"collapseWidthExample\">\r\n          <div className=\"card card-body\" style={{width: '300px'}}>\r\n            <ChromePicker\r\n              color={color}\r\n              onChange={(updatedColor) => {setColor(updatedColor.hex); props.color(updatedColor.hex)}}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport ColorPicker from \"./ColorPicker\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function Navbar(props) {\r\n\r\n  return (\r\n    <nav\r\n      className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}\r\n    >\r\n      <div className=\"container-fluid\">\r\n        <Link className=\"navbar-brand\" to=\"/\">\r\n          {props.title}\r\n        </Link>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">\r\n                Home\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link\" to=\"/about\">\r\n                {props.aboutText}\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n          <ColorPicker color={props.switchTheme}/>\r\n          <div\r\n            className={`form-check form-switch mx-3 text-${\r\n              props.mode === \"light\" ? \"dark\" : \"light\"\r\n            }`}\r\n          >\r\n            <input\r\n              className=\"form-check-input\"\r\n              type=\"checkbox\"\r\n              onClick={props.toggleMode}\r\n              id=\"flexSwitchCheckDefault\"\r\n            />\r\n            {props.modeText}\r\n            <label\r\n              className=\"form-check-label\"\r\n              htmlFor=\"flexSwitchCheckDefault\"\r\n            ></label>\r\n          </div>\r\n          <form className=\"d-flex\" role=\"search\">\r\n            <input\r\n              className=\"form-control me-2\"\r\n              type=\"search\"\r\n              placeholder=\"Search\"\r\n              aria-label=\"Search\"\r\n            />\r\n            <button className=\"btn btn-outline-success\" type=\"submit\">\r\n              Search\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\nNavbar.prototype = {\r\n  title: PropTypes.string.isRequired,\r\n  aboutText: PropTypes.string,\r\n};\r\nNavbar.defaultProps = {\r\n  title: \"Set Title here\",\r\n  aboutText: \"About Text here\",\r\n};\r\n","import React, { useState } from \"react\";\r\n\r\nexport default function TestForm(props) {\r\n  const handleUpClick = () => {\r\n    let newText = text.toUpperCase();\r\n    setText(newText);\r\n  };\r\n\r\n  const handleOnChange = (event) => {\r\n    setText(\"\");\r\n    setText(event.target.value);\r\n    let numberOfWords = text.split(\" \");\r\n    setWords(numberOfWords.length)\r\n  };\r\n\r\n  const handleDownClick = () => {\r\n    let newText = text.toLocaleLowerCase();\r\n    setText(newText);\r\n  };\r\n\r\n  const handleReset = () => {\r\n    setText(\"\");\r\n    setWords(\"0\");\r\n    props.showAlert(\"The text box is reset\",\"success\");\r\n  };\r\n\r\n  const replaceText = () => {\r\n    let promp1 = prompt(\"Please enter the word to be replaced\", \"\");\r\n    let promp2 = prompt(\"Please enter the word to be replaced by\", \"\");\r\n    let newText = text.replace(promp1, promp2);\r\n    setText(newText);\r\n  };\r\n  const replaceTextAll = () => {\r\n    let promp1 = prompt(\"Please enter the word to be replaced\", \"\");\r\n    let promp2 = prompt(\"Please enter the word to be replaced by\", \"\");\r\n    let newWord = text.replace(new RegExp(promp1, \"g\"), promp2);\r\n    setText(newWord);\r\n  };\r\n\r\n  const reverseWords = () => {\r\n    let reverseWordArr = text\r\n      .split(\" \")\r\n      .map((word) => word.split(\"\").reverse().join(\"\"));\r\n    reverseWordArr = reverseWordArr.join(\" \");\r\n    setText(reverseWordArr);\r\n  };\r\n\r\n  const handleCopy = ()=>{\r\n    navigator.clipboard.writeText(text);\r\n    props.showAlert(\"Text was copied to clipboard\",\"success\");\r\n  };\r\n\r\n  const [text, setText] = useState(\"\");\r\n  const [words, setWords] = useState(\"0\");\r\n  return (\r\n    <>\r\n      <div className=\"container\" style={{color: props.mode=== 'dark'?'white':'black', height: '61.5vh'}}>\r\n        <h1>{props.heading}</h1>\r\n        <div className=\"mb-3\">\r\n          <textarea\r\n            className=\"form-control\"\r\n            value={text}\r\n            onChange={handleOnChange} style= {{backgroundColor: props.mode=== 'dark'?'grey':'white', color: props.mode=== 'dark'?'white':'black'}}\r\n            id=\"myBox\"\r\n            rows=\"8\"\r\n          ></textarea>\r\n        </div>\r\n        <button className=\"btn btn-primary my-2 mx-2\" onClick={handleUpClick} style={{background: props.mode=== 'dark'?'white':'black', color: props.mode=== 'dark'?'black':'white'}}>\r\n          Convert to UPPERCASE\r\n        </button>\r\n        <button className=\"btn btn-primary my-2 mx-2\" onClick={handleDownClick} style={{background: props.mode=== 'dark'?'white':'black', color: props.mode=== 'dark'?'black':'white'}}>\r\n          Convert to lowercase\r\n        </button>\r\n        <button className=\"btn btn-primary my-2 mx-2\" onClick={replaceText} style={{background: props.mode=== 'dark'?'white':'black', color: props.mode=== 'dark'?'black':'white'}}>\r\n          Replace first occurence\r\n        </button>\r\n        <button className=\"btn btn-primary my-2 mx-2\" onClick={replaceTextAll} style={{background: props.mode=== 'dark'?'white':'black', color: props.mode=== 'dark'?'black':'white'}}>\r\n          Replace all occurences\r\n        </button>\r\n        <button className=\"btn btn-primary my-2 mx-2\" onClick={reverseWords} style={{background: props.mode=== 'dark'?'white':'black', color: props.mode=== 'dark'?'black':'white'}}>\r\n          Reverse Words\r\n        </button>\r\n        <button className=\"btn btn-primary my-2 mx-2\" onClick={handleCopy} style={{background: props.mode=== 'dark'?'white':'black', color: props.mode=== 'dark'?'black':'white'}}>\r\n          Copy to clipboard\r\n        </button>\r\n        <button className=\"btn btn-primary my-2 mx-2\" onClick={handleReset} style={{background: props.mode=== 'dark'?'white':'black', color: props.mode=== 'dark'?'black':'white'}}>\r\n          Reset\r\n        </button>\r\n      </div>\r\n      <div className=\"container my-3\" style={{color: props.mode=== 'dark'?'white':'black'}}>\r\n        <h2>Your text summary</h2>\r\n        <p>\r\n          {words} words and {text.length} characters and time required to read\r\n          this will be {text.split(\" \").length * 0.008} minutes\r\n        </p>\r\n        <h2>Preview</h2>\r\n        <p>{text.length>0?text.trim():\"Enter your text above to preview here\"}</p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nfunction Alert(props) {\r\n  const capatalize = (word)=>{\r\n    const lower = word.toLowerCase();\r\n    return lower.charAt(0).toUpperCase()+lower.slice(1);\r\n\r\n  }\r\n  return (\r\n    props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n      <strong>{capatalize(props.alert.type)}</strong> : {props.alert.msg}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Alert;\r\n","import \"./App.css\";\nimport About from \"./Components/About\";\nimport Navbar from \"./Components/Navbar\";\nimport TestForm from \"./Components/TestForm\";\nimport React, { useState } from \"react\";\nimport Alert from \"./Components/Alert\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState(\"light\");\n  const [modeText, setModeText] = useState(\"Light Mode\");\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type,\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  };\n\n  const switchTheme = (theme) => {\n    document.body.style.background = `linear-gradient(${theme},transparent)`;\n  };\n\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      setModeText(\"Dark Mode\");\n      document.body.style.backgroundColor = \"#002356\";\n      showAlert(\"Dark mode is enabled\", \"success\");\n    } else {\n      setMode(\"light\");\n      setModeText(\"Light Mode\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"Light mode is enabled\", \"success\");\n    }\n  };\n  return (\n    <>\n      <Router>\n        <Navbar\n          title=\"textUtils\"\n          aboutText=\"About textUtils\"\n          mode={mode}\n          toggleMode={toggleMode}\n          modeText={modeText}\n          switchTheme={switchTheme}\n        />\n        <Alert alert={alert} />\n        <div className=\"container my-3\">\n          <Routes>\n            {/* Without using exact keyword, react matches only partially */}\n            <Route\n              exact path=\"/\"\n              element={\n                <TestForm\n                  heading=\"Enter your Text to Analysis\"\n                  mode={mode}\n                  showAlert={showAlert}\n                />\n              }\n            ></Route>\n            <Route exact path=\"/about\" element={<About mode={mode} />}></Route>\n          </Routes>\n        </div>\n      </Router>\n    </>\n  );\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}